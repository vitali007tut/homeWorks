//! 1) Какие бывают алгоритмы сортировок ?
//
//  - Пузырьковая сортировка O(n2)
//      перебирает весь массив элементов, сравнивая два соседних элемента друг с другом и меняя их местами в соответствии с условиями
//  - Сортировка выбором O(n2)
//      при каждой итерации проходит по неотсортированной части массива, находит минимальный элемент и переносит его в начало массива
//  - Быстрая сортировка O(n * log n) в худшем случае: O(n2)
//      определяет так называемый 'стержень' и разбивает массив на подмассивы относительно «стержня», которые затем сортируются
//
// 2) Прочитать про "Операторы и выражения, циклы в JS"
// 3) Создать объект Person несколькими способами, после создать объект Person2, чтобы в нём были доступны методы объекта Person. Добавить метод logInfo чтоб он был доступен всем объектам.
// 4) Создать класс PersonThree c get и set для поля name и конструктором, сделать класс наследник от класса Person.

// БОНУС: 
//! 1) Написать функцию, которая вернет массив с первой парой чисел, сумма которых равна total:

arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
total = 13;
//result = [4, 9]

 const firstSum = (arr, total) => {
     const result = []
     for (let i = 0; i < arr.length - 1; i++) {
         const start = arr[i]
         for (let j = i + 1; j < arr.length; j++) {
             if (total === start + arr[j]) {
                 result.push(start)
                 result.push(arr[j])
                 return result
             }
         }
     }
     return result
 }

console.log(firstSum(arr,total))

//! 2) Какая сложность у вашего алгоритма ?
//* O(n2) — квадратичная сложность -- цикл в цикле